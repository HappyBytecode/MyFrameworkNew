// Generated by Dagger (https://dagger.dev).
package com.hxyc.myframework.module.actcen;

import com.hxyc.myframework.base.BasePresenter_MembersInjector;
import com.hxyc.myframework.common.AppComponent;
import dagger.internal.Preconditions;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DaggerPromoteValueComponent implements PromoteValueComponent {
  private final PromoteValueModule promoteValueModule;

  private final AppComponent appComponent;

  private DaggerPromoteValueComponent(PromoteValueModule promoteValueModuleParam,
      AppComponent appComponentParam) {
    this.promoteValueModule = promoteValueModuleParam;
    this.appComponent = appComponentParam;
  }

  public static Builder builder() {
    return new Builder();
  }

  private PromoteValuePresenter getPromoteValuePresenter() {
    return injectPromoteValuePresenter(PromoteValuePresenter_Factory.newInstance(PromoteValueModule_ProvidePromoteValueContractViewFactory.providePromoteValueContractView(promoteValueModule), Preconditions.checkNotNull(appComponent.configRepository(), "Cannot return null from a non-@Nullable component method")));
  }

  @Override
  public void inject(PromoteValueFragment promoteValueFragment) {
    injectPromoteValueFragment(promoteValueFragment);
  }

  private PromoteValuePresenter injectPromoteValuePresenter(PromoteValuePresenter instance) {
    BasePresenter_MembersInjector.injectMSP(instance, Preconditions.checkNotNull(appComponent.sp(), "Cannot return null from a non-@Nullable component method"));
    return instance;
  }

  private PromoteValueFragment injectPromoteValueFragment(PromoteValueFragment instance) {
    PromoteValueFragment_MembersInjector.injectMPresenter(instance, getPromoteValuePresenter());
    PromoteValueFragment_MembersInjector.injectMSp(instance, Preconditions.checkNotNull(appComponent.sp(), "Cannot return null from a non-@Nullable component method"));
    return instance;
  }

  public static final class Builder {
    private PromoteValueModule promoteValueModule;

    private AppComponent appComponent;

    private Builder() {
    }

    public Builder promoteValueModule(PromoteValueModule promoteValueModule) {
      this.promoteValueModule = Preconditions.checkNotNull(promoteValueModule);
      return this;
    }

    public Builder appComponent(AppComponent appComponent) {
      this.appComponent = Preconditions.checkNotNull(appComponent);
      return this;
    }

    public PromoteValueComponent build() {
      Preconditions.checkBuilderRequirement(promoteValueModule, PromoteValueModule.class);
      Preconditions.checkBuilderRequirement(appComponent, AppComponent.class);
      return new DaggerPromoteValueComponent(promoteValueModule, appComponent);
    }
  }
}
