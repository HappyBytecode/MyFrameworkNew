// Generated by Dagger (https://dagger.dev).
package com.hxyc.myframework.common;

import com.hxyc.myframework.api.CommonApi;
import com.hxyc.myframework.db.SP;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideCommonApiFactory implements Factory<CommonApi> {
  private final AppModule module;

  private final Provider<SP> spProvider;

  public AppModule_ProvideCommonApiFactory(AppModule module, Provider<SP> spProvider) {
    this.module = module;
    this.spProvider = spProvider;
  }

  @Override
  public CommonApi get() {
    return provideCommonApi(module, spProvider.get());
  }

  public static AppModule_ProvideCommonApiFactory create(AppModule module,
      Provider<SP> spProvider) {
    return new AppModule_ProvideCommonApiFactory(module, spProvider);
  }

  public static CommonApi provideCommonApi(AppModule instance, SP sp) {
    return Preconditions.checkNotNull(instance.provideCommonApi(sp), "Cannot return null from a non-@Nullable @Provides method");
  }
}
